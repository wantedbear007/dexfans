type CanisterMetaData = record {
  parent_canister : principal;
  asset_canister : vec principal;
};
type CreatePostArgs = record {
  content : text;
  post_type : PostType;
  video : opt text;
  image : opt text;
  price : opt nat8;
};
type Membership = variant { Guest; Gold; Platinum; Silver };
type Post = record {
  post_id : nat;
  content : text;
  post_type : PostType;
  creator_id : principal;
  video : opt text;
  views : vec principal;
  created_at : nat64;
  likes : vec principal;
  image : opt text;
  comments : vec nat;
  price : opt nat8;
};
type PostType = variant { Free; Gold; Paid; Platinum; Silver };
type Result = variant { Ok; Err : text };
type Result_1 = variant { Ok : text; Err : text };
type Result_2 = variant { Ok : UserProfileIC; Err : text };
type Result_3 = variant { Ok : CanisterMetaData; Err : text };
type Result_4 = variant { Ok : vec Post; Err : text };
type UpdateMembershipIC = record { user : principal; membership : Membership };
type UpdatePostArgs = record {
  id : nat;
  content : text;
  post_type : PostType;
  video : opt text;
  image : opt text;
  price : opt nat8;
};
type UpdateUserProfileArgsIC = record { username : text; user_id : principal };
type UserProfileIC = record {
  username : text;
  user_id : principal;
  likes : vec nat;
  membership : Membership;
  posts : vec nat;
  collects : vec nat;
};
service : (CanisterMetaData) -> {
  admin_add_user_profile : (UserProfileIC) -> (Result);
  admin_update_membership : (UpdateMembershipIC) -> (Result);
  admin_update_user_profile : (UpdateUserProfileArgsIC) -> (Result);
  api_create_new_post : (CreatePostArgs) -> (Result_1);
  api_update_post : (UpdatePostArgs) -> (Result_1);
  controller_subscribe : (principal) -> (Result);
  debug_get_all_profile : () -> (vec UserProfileIC) query;
  debug_get_user_profile : () -> (Result_2) query;
  get_canister_meta_data : () -> (Result_3) query;
  get_latest_subscribed_posts : (principal, principal, nat32) -> (Result_4);
  get_post_by_id : (nat) -> (opt Post) query;
  get_user_posts_paginated : (principal, principal, nat32) -> (Result_4);
  greet : (text) -> (text) query;
  latest_posts : (nat64) -> (vec Post) query;
  list_all_posts : () -> (vec Post) query;
}
