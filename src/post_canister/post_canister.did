type CanisterMetaData = record {
  parent_canister : principal;
  asset_canister : vec principal;
};
type CreatePostArgs = record {
  content : text;
  post_type : PostType;
  video : opt text;
  image : opt text;
  price : opt nat8;
};
type Post = record {
  post_id : text;
  content : text;
  post_type : PostType;
  creator_id : principal;
  video : opt text;
  views : vec principal;
  created_at : nat64;
  likes : vec principal;
  image : opt text;
  comments : vec nat;
  price : opt nat8;
};
type PostType = variant { Free; Gold; Paid; Platinum; Silver };
type Result = variant { Ok; Err : text };
type Result_1 = variant { Ok : CanisterMetaData; Err : text };
type Result_2 = variant { Ok : vec Post; Err : text };
service : (CanisterMetaData) -> {
  comment_on_post : (nat, text, opt text) -> (Result);
  create_post : (CreatePostArgs) -> (Result);
  get_canister_meta_data : () -> (Result_1) query;
  get_latest_subscribed_posts : (principal, principal, nat32) -> (Result_2);
  get_post_by_id : (nat) -> (opt Post) query;
  get_user_posts_paginated : (principal, principal, nat32) -> (Result_2);
  greet : (text) -> (text) query;
  latest_posts : (nat64) -> (vec Post) query;
  like_unlike_post : (nat) -> (Result);
  list_all_posts : () -> (vec Post) query;
}
