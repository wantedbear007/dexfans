type CanisterMetaData = record {
  controllers : vec principal;
  asset_canister : principal;
};
type Membership = variant { Guest; Gold; Platinum; Silver };
type Result = variant { Ok; Err : text };
type Result_1 = variant { Ok : text; Err : text };
type Result_2 = variant { Ok : UserProfile; Err : text };
type Result_3 = variant { Ok : principal; Err : text };
type Result_4 = variant { Ok : vec nat; Err : text };
type UserInputArgs = record {
  bio : opt text;
  username : text;
  cover_image : opt text;
  avatar : opt text;
};
type UserProfile = record {
  bio : opt text;
  username : text;
  asset_canister_id : principal;
  cover_image : opt text;
  created_at : nat64;
  user_id : principal;
  is_bot : bool;
  likes : vec nat;
  subscribers : vec principal;
  subscribing : vec principal;
  membership : Membership;
  posts : vec nat;
  collects : vec nat;
  avatar : opt text;
};
service : (CanisterMetaData) -> {
  add_post_id_to_user : (principal, nat) -> (Result);
  api_create_account : (UserInputArgs) -> (Result_1);
  api_get_my_account : () -> (Result_2) query;
  api_get_user_account : (principal) -> (Result_2) query;
  get_asset_canister : () -> (Result_3) query;
  get_subscribed_users_posts : (principal) -> (Result_4) query;
  get_user_posts : (principal) -> (Result_4) query;
  greet : (text) -> (text) query;
  list_all_accounts : () -> (vec UserProfile) query;
  update_user_likes : (principal, nat, bool) -> (Result);
  update_user_profile : (principal, UserProfile) -> (Result);
}
